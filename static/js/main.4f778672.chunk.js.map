{"version":3,"sources":["components/Notification/Notification.module.css","components/transition/slide.module.css","components/ContactItem/ContactItem.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","components/App/App.module.css","components/Notification/Notification.js","components/ContactForm/ContactForm.js","components/ContactItem/ContactItem.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/App/App.js","redux/contactTypes.js","redux/contactReducers.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","Notification","text","className","Alert","alert","ContactForm","state","name","number","showingAlert","handleChange","e","target","setState","value","handleSubmit","preventDefault","contacts","props","find","contact","toLowerCase","onAddContact","id","shortid","generate","contactsFromLS","localStorage","getItem","this","JSON","parse","styles","contactForm","onSubmit","htmlFor","label","inputName","type","onChange","inputNumber","formBtn","CSSTransition","in","timeout","classNames","onEntered","setTimeout","unmountOnExit","Component","ContactItem","onDelete","itemBox","onClick","itemBtn","ContactList","TransitionGroup","component","length","map","item","key","slideTransition","contactItem","Filter","onChangeFilter","filterTitle","filterInput","App","containerApp","appear","titleApp","Types","ADD_CONTACT","DELETE_CONTACT","FILTER_CONTACT","rootReducer","combineReducers","payload","data","filter","store","createStore","devToolsEnhancer","ReactDOM","render","document","getElementById"],"mappings":"8FACAA,EAAOC,QAAU,CAAC,MAAQ,4BAA4B,MAAQ,4BAA4B,YAAc,kCAAkC,KAAO,2BAA2B,WAAa,mC,mBCAzLD,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,YAAc,2BAA2B,KAAO,oBAAoB,WAAa,4B,mBCAhID,EAAOC,QAAU,CAAC,QAAU,6BAA6B,QAAU,+B,mBCAnED,EAAOC,QAAU,CAAC,SAAW,gC,mBCA7BD,EAAOC,QAAU,CAAC,YAAc,4BAA4B,YAAc,8B,mBCA1ED,EAAOC,QAAU,CAAC,aAAe,0BAA0B,SAAW,wB,mQCWvDC,EARM,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACtB,OAAO,yBAAKC,UAAWC,IAAMC,OAAQH,I,gBC0GxBI,E,2MA1FbC,MAAQ,CACNC,KAAM,GACNC,OAAQ,GACRP,KAAM,GACNQ,cAAc,G,EAUhBC,aAAe,SAAAC,GAAM,IACXJ,EAASI,EAAEC,OAAXL,KACR,EAAKM,SAAL,eAAiBN,EAAOI,EAAEC,OAAOE,S,EAGnCC,aAAe,SAAAJ,GACbA,EAAEK,iBADgB,MAEO,EAAKV,MAAtBC,EAFU,EAEVA,KAAMC,EAFI,EAEJA,OACNS,EAAa,EAAKC,MAAlBD,SACK,KAATV,GAA0B,KAAXC,IAEFS,EAASE,MACxB,SAAAC,GAAO,OAAIA,EAAQb,KAAKc,gBAAkBd,EAAKc,iBAG/C,EAAKR,SAAS,CAAEZ,KAAM,0BAA2BQ,cAAc,KAE/D,EAAKS,MAAMI,aAAX,eAA6B,EAAKhB,MAAlC,CAAyCiB,GAAIC,IAAQC,cACrD,EAAKZ,SAAS,CAAEN,KAAM,GAAIC,OAAQ,Q,mFAxBpC,IAAMkB,EAAiBC,aAAaC,QAAQ,YACxCF,GACFG,KAAKhB,SAAS,CAAEI,SAAUa,KAAKC,MAAML,O,+BA0B/B,IAAD,SACsCG,KAAKvB,MAA1CC,EADD,EACCA,KAAMC,EADP,EACOA,OAAQP,EADf,EACeA,KAAMQ,EADrB,EACqBA,aAE5B,OACE,oCACE,0BAAMP,UAAW8B,IAAOC,YAAaC,SAAUL,KAAKd,cAClD,2BACE,2BAAOoB,QAAQ,QACb,0BAAMjC,UAAW8B,IAAOI,OAAxB,QACA,2BACElC,UAAW8B,IAAOK,UAClB9B,KAAK,OACL+B,KAAK,OACLC,SAAUV,KAAKnB,aACfI,MAAOP,MAIb,2BACE,2BAAO4B,QAAQ,QACb,0BAAMjC,UAAW8B,IAAOI,OAAxB,UACA,2BACElC,UAAW8B,IAAOQ,YAClBjC,KAAK,SACL+B,KAAK,MACLC,SAAUV,KAAKnB,aACfI,MAAON,MAIb,4BAAQ8B,KAAK,SAASpC,UAAW8B,IAAOS,SAAxC,gBAIF,kBAACC,EAAA,EAAD,CACEC,GAAIlC,EACJmC,QAAS,IACTC,WAAY1C,IACZ2C,UAAW,kBACTC,YAAW,WACT,EAAKlC,SAAS,CACZJ,cAAc,MAEf,MAELuC,eAAa,GAEb,kBAAC,EAAD,CAAc/C,KAAMA,U,GAhGJgD,a,yBCeXC,EAnBK,SAAC,GAAD,IAAG3C,EAAH,EAAGA,KAAMC,EAAT,EAASA,OAAQ2C,EAAjB,EAAiBA,SAAjB,OAClB,oCACE,yBAAKjD,UAAW8B,IAAOoB,SACrB,8BACG7C,EADH,KACWC,GAEX,4BAAQ8B,KAAK,SAASe,QAASF,EAAUjD,UAAW8B,IAAOsB,SACzD,0C,kCCyBOC,EA7BK,SAAC,GAA4B,IAA1BtC,EAAyB,EAAzBA,SAAUkC,EAAe,EAAfA,SAC/B,OACE,kBAACK,EAAA,EAAD,CAAiBC,UAAU,KAAKvD,UAAW8B,IAAOf,UAC/CA,EAASyC,OAAS,GACjBzC,EAAS0C,KAAI,SAAAC,GAAI,OACf,kBAAClB,EAAA,EAAD,CACEmB,IAAKD,EAAKrC,GACVqB,QAAS,IACTI,eAAa,EACbH,WAAYiB,KAEZ,wBAAI5D,UAAW8B,IAAO+B,aACpB,kBAAC,EAAD,CACExD,KAAMqD,EAAKrD,KACXC,OAAQoD,EAAKpD,OACb2C,SAAU,kBAAMA,EAASS,EAAKrC,c,iBCc/ByC,EA5BA,SAAC,GAA8C,IAAD,IAA3C/C,gBAA2C,MAAhC,GAAgC,EAA5BH,EAA4B,EAA5BA,MAAOmD,EAAqB,EAArBA,eAMtC,OACE,oCACE,kBAACvB,EAAA,EAAD,CACEC,GAAI1B,EAASyC,OAAS,EACtBd,QAAS,IACTI,eAAa,EACbH,WAAYiB,KAEZ,oCACE,0BAAM5D,UAAW8B,IAAOkC,aAAxB,yBACA,2BACEhE,UAAW8B,IAAOmC,YAClB7B,KAAK,OACLxB,MAAOA,EACPyB,SAAU,SAAA5B,GAAC,OAAIsD,EAAetD,EAAEC,OAAOE,c,iBCmDpCsD,G,MAjEH,WAmDV,OACE,yBAAKlE,UAAW8B,IAAOqC,cACrB,kBAAC3B,EAAA,EAAD,CAAeC,IAAE,EAACC,QAAS,IAAKC,WAAW,QAAQyB,QAAM,GACvD,wBAAIpE,UAAW8B,IAAOuC,UAAtB,cAEF,kBAAC,EAAD,MACA,wCACA,kBAAC,EAAD,MACA,kBAAC,EAAD,S,uBCnESC,EAND,CACZC,YAAa,cACbC,eAAgB,iBAChBC,eAAgB,kBC4BHC,EALKC,0BAAgB,CAClC5D,SAxBqB,WAAoC,IAAnCX,EAAkC,uDAA1B,GAA0B,yCAApBgC,EAAoB,EAApBA,KAAMwC,EAAc,EAAdA,QAC1C,OAAQxC,GACN,KAAKkC,EAAMC,YACT,MAAM,GAAN,mBAAWnE,GAAX,CAAkBwE,EAAQC,OAE5B,KAAKP,EAAME,eACT,OAAOpE,EAAM0E,QAAO,SAAApB,GAAI,OAAIA,EAAKrC,KAAOuD,EAAQvD,MAElD,QACE,OAAOjB,IAgBX0E,OAZoB,WAAoC,IAAnC1E,EAAkC,uDAA1B,GAA0B,yCAApBgC,EAAoB,EAApBA,KAAMwC,EAAc,EAAdA,QACzC,OAAQxC,GACN,KAAKkC,EAAMG,eACT,OAAOG,EAAQhE,MAEjB,QACE,OAAOR,MCjBE2E,EADDC,sBAAYN,EAAaO,8B,MCGvCC,IAASC,OACP,kBAAC,IAAD,CAAUJ,MAAOA,GACf,kBAAC,EAAD,OAEFK,SAASC,eAAe,U,kBCV1BzF,EAAOC,QAAU,CAAC,YAAc,iCAAiC,UAAY,+BAA+B,YAAc,iCAAiC,MAAQ,2BAA2B,QAAU,gC","file":"static/js/main.4f778672.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"alert\":\"Notification_alert__2oznE\",\"enter\":\"Notification_enter__3G0ed\",\"enterActive\":\"Notification_enterActive__1qTpG\",\"exit\":\"Notification_exit__H5vKw\",\"exitActive\":\"Notification_exitActive__3vueL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"slide_enter__ksenC\",\"enterActive\":\"slide_enterActive__3_ZXt\",\"exit\":\"slide_exit__n_TNs\",\"exitActive\":\"slide_exitActive__2Z_sG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemBox\":\"ContactItem_itemBox__xzs-V\",\"itemBtn\":\"ContactItem_itemBtn__3v1DK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts\":\"ContactList_contacts__3rpGk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterTitle\":\"Filter_filterTitle__xKr5n\",\"filterInput\":\"Filter_filterInput__2mv4Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"containerApp\":\"App_containerApp__3Ir--\",\"titleApp\":\"App_titleApp__22JrR\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Alert from './Notification.module.css';\n\nconst Notification = ({ text }) => {\n  return <div className={Alert.alert}>{text}</div>;\n};\n\nNotification.propTypes = {\n  text: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport shortid from 'shortid';\nimport { CSSTransition } from 'react-transition-group';\nimport Notification from '../Notification/Notification';\nimport Alert from '../Notification/Notification.module.css';\nimport styles from './ContactForm.module.css';\n\nclass ContactForm extends Component {\n  static propTypes = {\n    contacts: PropTypes.arrayOf(\n      PropTypes.shape({\n        name: PropTypes.string,\n        number: PropTypes.number,\n      }),\n    ).isRequired,\n    onAddContact: PropTypes.func.isRequired,\n    // text: PropTypes.string.isRequired,\n    // showingAlert: PropTypes.shape.isRequired,\n  };\n\n  state = {\n    name: '',\n    number: '',\n    text: '',\n    showingAlert: false,\n  };\n\n  componentDidMount() {\n    const contactsFromLS = localStorage.getItem('contacts');\n    if (contactsFromLS) {\n      this.setState({ contacts: JSON.parse(contactsFromLS) });\n    }\n  }\n\n  handleChange = e => {\n    const { name } = e.target;\n    this.setState({ [name]: e.target.value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const { name, number } = this.state;\n    const { contacts } = this.props;\n    if (name === '' || number === '') return;\n\n    const findName = contacts.find(\n      contact => contact.name.toLowerCase() === name.toLowerCase(),\n    );\n    if (findName) {\n      this.setState({ text: 'Contact already exists!', showingAlert: true });\n    } else {\n      this.props.onAddContact({ ...this.state, id: shortid.generate() });\n      this.setState({ name: '', number: '' });\n    }\n  };\n\n  render() {\n    const { name, number, text, showingAlert } = this.state;\n\n    return (\n      <>\n        <form className={styles.contactForm} onSubmit={this.handleSubmit}>\n          <p>\n            <label htmlFor=\"true\">\n              <span className={styles.label}>Name</span>\n              <input\n                className={styles.inputName}\n                name=\"name\"\n                type=\"text\"\n                onChange={this.handleChange}\n                value={name}\n              />\n            </label>\n          </p>\n          <p>\n            <label htmlFor=\"true\">\n              <span className={styles.label}>Number</span>\n              <input\n                className={styles.inputNumber}\n                name=\"number\"\n                type=\"tel\"\n                onChange={this.handleChange}\n                value={number}\n              />\n            </label>\n          </p>\n          <button type=\"submit\" className={styles.formBtn}>\n            Add contact\n          </button>\n        </form>\n        <CSSTransition\n          in={showingAlert}\n          timeout={250}\n          classNames={Alert}\n          onEntered={() =>\n            setTimeout(() => {\n              this.setState({\n                showingAlert: false,\n              });\n            }, 5000)\n          }\n          unmountOnExit\n        >\n          <Notification text={text} />\n        </CSSTransition>\n      </>\n    );\n  }\n}\n\nexport default ContactForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './ContactItem.module.css';\n\nconst ContactItem = ({ name, number, onDelete }) => (\n  <>\n    <div className={styles.itemBox}>\n      <span>\n        {name}: {number}\n      </span>\n      <button type=\"button\" onClick={onDelete} className={styles.itemBtn}>\n        <span>&times;</span>\n      </button>\n    </div>\n  </>\n);\n\nContactItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onDelete: PropTypes.func.isRequired,\n};\n\nexport default ContactItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\nimport ContactItem from '../ContactItem/ContactItem';\nimport slideTransition from '../transition/slide.module.css';\nimport styles from './ContactList.module.css';\n\nconst ContactList = ({ contacts, onDelete }) => {\n  return (\n    <TransitionGroup component=\"ul\" className={styles.contacts}>\n      {contacts.length > 0 &&\n        contacts.map(item => (\n          <CSSTransition\n            key={item.id}\n            timeout={250}\n            unmountOnExit\n            classNames={slideTransition}\n          >\n            <li className={styles.contactItem}>\n              <ContactItem\n                name={item.name}\n                number={item.number}\n                onDelete={() => onDelete(item.id)}\n              />\n            </li>\n          </CSSTransition>\n        ))}\n    </TransitionGroup>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.object).isRequired,\n  onDelete: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { CSSTransition } from 'react-transition-group';\n\nimport slideTransition from '../transition/slide.module.css';\nimport styles from './Filter.module.css';\n\nconst Filter = ({ contacts = [], value, onChangeFilter }) => {\n  Filter.propTypes = {\n    contacts: PropTypes.shape({ length: PropTypes.number }).isRequired,\n    value: PropTypes.string.isRequired,\n    onChangeFilter: PropTypes.func.isRequired,\n  };\n  return (\n    <>\n      <CSSTransition\n        in={contacts.length > 1}\n        timeout={250}\n        unmountOnExit\n        classNames={slideTransition}\n      >\n        <>\n          <span className={styles.filterTitle}>Find contacts by name</span>\n          <input\n            className={styles.filterInput}\n            type=\"text\"\n            value={value}\n            onChange={e => onChangeFilter(e.target.value)}\n          />\n        </>\n      </CSSTransition>\n    </>\n  );\n};\n\nexport default Filter;\n","import React from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport ContactForm from '../ContactForm/ContactForm';\nimport ContactList from '../ContactList/ContactList';\nimport Filter from '../Filter/Filter';\nimport styles from './App.module.css';\nimport '../styles.css';\n\n// const filterContacts = (contacts, filter) => {\n//   return contacts.filter(contact =>\n//     contact.name.toLowerCase().includes(filter.toLowerCase()),\n//   );\n// };\n\nconst App = () => {\n  // state = {\n  //   contacts: [],\n  //   filter: '',\n  //   text: '',\n  //   showingAlert: false,\n  // };\n\n  // componentDidUpdate(prevProps, prevState) {\n  //   const { contacts } = this.state;\n  //   if (prevState.contacts !== contacts) {\n  //     localStorage.setItem('contacts', JSON.stringify(contacts));\n  //   }\n  // }\n\n  // deleteContact = id => {\n  //   this.setState(prevState => ({\n  //     contacts: prevState.contacts.filter(el => el.id !== id),\n  //   }));\n  // };\n\n  // changeFilter = e => {\n  //   this.setState({ filter: e.target.value });\n  // };\n\n  // addContact = name => {\n  //   if (this.state.contacts.find(item => item.name === name.name)) {\n  //     this.setState({ text: 'Contact already exists!', showingAlert: true });\n  //     return;\n  //   }\n\n  //   const contactToAdd = {\n  //     ...name,\n  //     id: shortid.generate(),\n  //   };\n\n  //   this.setState(prevState => ({\n  //     contacts: [...prevState.contacts, contactToAdd],\n  //   }));\n  // };\n\n  // render() {\n  // const { contacts, filter } = this.state;\n  // const filterContacts = () => {\n  //   return contacts.some(contact =>\n  //     contact.name.toLowerCase().includes(filter.toLowerCase()),\n  //   );\n  // };\n\n  // const filteredContacts = filterContacts(contacts, filter);\n\n  return (\n    <div className={styles.containerApp}>\n      <CSSTransition in timeout={500} classNames=\"title\" appear>\n        <h1 className={styles.titleApp}>Phonebook</h1>\n      </CSSTransition>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n};\n// }\n\nexport default App;\n","const Types = {\n  ADD_CONTACT: 'ADD_CONTACT',\n  DELETE_CONTACT: 'DELETE_CONTACT',\n  FILTER_CONTACT: 'FILTER_CONTACT',\n};\n\nexport default Types;\n","import { combineReducers } from 'redux';\nimport Types from './contactTypes';\n\nconst contactReducer = (state = [], { type, payload }) => {\n  switch (type) {\n    case Types.ADD_CONTACT:\n      return [...state, payload.data];\n\n    case Types.DELETE_CONTACT:\n      return state.filter(item => item.id !== payload.id);\n\n    default:\n      return state;\n  }\n};\n\nconst filterReducer = (state = '', { type, payload }) => {\n  switch (type) {\n    case Types.FILTER_CONTACT:\n      return payload.value;\n\n    default:\n      return state;\n  }\n};\n\nconst rootReducer = combineReducers({\n  contacts: contactReducer,\n  filter: filterReducer,\n});\n\nexport default rootReducer;\n","import { createStore } from 'redux';\nimport { devToolsEnhancer } from 'redux-devtools-extension';\nimport rootReducer from './contactReducers';\n\nconst store = createStore(rootReducer, devToolsEnhancer());\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './components/App/App';\nimport store from './redux/store';\nimport './index.css';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"ContactForm_contactForm__3e6bv\",\"inputName\":\"ContactForm_inputName__2rzjV\",\"inputNumber\":\"ContactForm_inputNumber__52uFf\",\"label\":\"ContactForm_label__iH0p4\",\"formBtn\":\"ContactForm_formBtn__-U6wk\"};"],"sourceRoot":""}